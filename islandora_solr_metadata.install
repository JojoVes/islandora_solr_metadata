<?php

/**
 * @file
 * Implementations of installation hooks.
 */

use Drupal\filter\Entity\FilterFormat;

/**
 * Implements hook_schema().
 */
function islandora_solr_metadata_schema() {
  $schema['islandora_solr_metadata_associations'] = [
    'description' => 'Table that stores saved configuration names.',
    'fields' => [
      'configuration_id' => [
        'description' => 'Unique ID given to each association',
        'type' => 'serial',
        'length' => 11,
        'not null' => TRUE,
      ],
      'configuration_name' => [
        'description' => 'The name of the configuration which this field belongs to',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ],
      'description_field' => [
        'type' => 'varchar',
        'length' => 255,
        'default' => NULL,
        'description' => 'The field name as indexed in Solr to be used for displaying description metadata',
      ],
      'description_label' => [
        'type' => 'varchar',
        'length' => 255,
        'description' => 'The label for the description metadata',
        'default' => NULL,
      ],
      'description_data' => [
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of name value pairs that store extra description field settings.',
      ],
      'machine_name' => [
        'type' => 'varchar',
        'length' => 255,
        'description' => 'The machine readable name for this association',
        'not null' => TRUE,
      ],
    ],
    'primary key' => ['configuration_id'],
  ];
  $schema['islandora_solr_metadata_fields'] = [
    'description' => 'Table that stores Islandora Solr Metadata field settings.',
    'fields' => [
      'configuration_id' => [
        'type' => 'int',
        'length' => 11,
        'not null' => TRUE,
        'description' => 'The ID of the configuration which this field belongs to',
      ],
      'solr_field' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The field name as indexed in Solr',
      ],
      'data' => [
        'type' => 'blob',
        'not null' => FALSE,
        'size' => 'big',
        'serialize' => TRUE,
        'description' => 'A serialized array of name value pairs that store permissions field settings.',
      ],
      'weight' => [
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Weight of the field within field type.',
      ],
    ],
    'primary key' => ['configuration_id', ['solr_field', 191]],
  ];
  $schema['islandora_solr_metadata_cmodels'] = [
    'description' => 'Table that stores content models associated to configurations',
    'fields' => [
      'configuration_id' => [
        'type' => 'int',
        'length' => 11,
        'not null' => TRUE,
        'description' => 'The ID of the configuration which this field belongs to',
      ],
      'cmodel' => [
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
        'description' => 'The name of the content model assigned to this configuration',
      ],
    ],
    'primary_key' => ['configuration_id', ['cmodel', 191]],
  ];
  return $schema;
}

/**
 * Implements hook_uninstall().
 */
function islandora_solr_metadata_uninstall() {
  $islandora_solr_metadata_filtered_html = FilterFormat::load('islandora_solr_metadata_filtered_html');
  if ($islandora_solr_metadata_filtered_html !== NULL) {
    $islandora_solr_metadata_filtered_html->delete();
  }
}

/**
 * Implements hook_install().
 */
function islandora_solr_metadata_install() {
  // Check if this module's filter exists in the system.
  // Everything will break if we try to make an existing filter format.
  $islandora_solr_metadata_filtered_html = FilterFormat::load('islandora_solr_metadata_filtered_html');
  if ($islandora_solr_metadata_filtered_html !== NULL) {
    // Check if filter format is enabled or not.
    if (!$islandora_solr_metadata_filtered_html->status()) {
      $islandora_solr_metadata_filtered_html->enable();
    }
  }
  else {
    $format = FilterFormat::load('restricted_html')->createDuplicate();
    $format = $format->set('format', 'islandora_solr_metadata_filtered_html');
    $filters = $format->get('filters');
    $filters['filter_html']['settings']['allowed_html'] .= ' <span>';
    $format->set('filters', $filters);
    $format = $format->setOriginalId('islandora_solr_metadata_filtered_html');
    $format->set('name', t('Islandora Solr Metadata Filtered HTML'));
    $format->save();
  }
}
